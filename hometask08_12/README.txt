1.1) Принцип работы класса Router: при инициализации экземпляра класса создается пустой словарь @routes;
1.2) При вызове метода init экземпляра класса Router вызывается метод resources этого экземпляра класса, принимающий контроллер ресурса и название ресурса, которое будет исользоваться в качестве ключа в словаре
1.2.1) В текущей реализации доступен только ресурс posts (и его контроллер), но создан также "интерфейс" для добавления ресурса comments
1.2.2) В методе resources создается экземпляр класса соответствующего контроллера и в словарь @routes по ключу названия ресурса добавляется словарь, содержащий CRUD-методы экземпляра класса соответстсвующего контроллера
1.3) Далее в методе init запускается бесконечный цикл, который предлагает выбрать ресурс для взаимодействия
1.3.1) После выбора пользователем ресурса вызывается метод connection класса соответствующего контроллера, в котором также в свою очередь запускается бесконечный цикл, в котором пользователь может взаимодействовать с данным ресурсом
1.3.2) Взаимодействие происходит с помощью введения команды (GET/PUT/POST/DELETE) и уточняющих данных, необходимых программе, до тех пор, пока не будет введена команда q
1.4) При введении команды q в меню выбора ресурса выполнение программы завершается

2) Для модуля Resource используется extend (а не include), потому что по логике в программе далее метод connection (из модуля Resource) вызывается, как метод класса, а не метод экземпляра класса